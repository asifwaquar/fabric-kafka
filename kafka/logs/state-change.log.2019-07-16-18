[2019-07-16 18:01:42,546] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[]} for request STOP_REPLICA with correlation id 16 sent to broker 192.168.1.183:9092 (id: 4 rack: null) (state.change.logger)
[2019-07-16 18:01:42,551] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=0}]} for request STOP_REPLICA with correlation id 17 sent to broker 192.168.1.183:9092 (id: 4 rack: null) (state.change.logger)
[2019-07-16 18:01:42,561] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition rtr-sys-channel-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:42,561] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,4,1, isNew=false) to broker 2 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:42,562] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,4,1, isNew=false) to broker 1 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:42,565] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 4, 1], offlineReplicas=[4]) to brokers Set(1, 2, 3, 4) for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:42,565] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,4,1, isNew=false) correlation id 16 from controller 1 epoch 2 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:42,565] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 16 from controller 1 epoch 2 starting the become-follower transition for partition rtr-sys-channel-0 with leader 2 (state.change.logger)
[2019-07-16 18:01:42,567] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 16 for partition rtr-sys-channel-0 with leader 2 (state.change.logger)
[2019-07-16 18:01:42,567] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition rtr-sys-channel-0 as part of become-follower request with correlation id 16 from controller 1 epoch 2 with leader 2 (state.change.logger)
[2019-07-16 18:01:42,568] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 1 epoch 2 with correlation id 16 for partition rtr-sys-channel-0 with leader 2 (state.change.logger)
[2019-07-16 18:01:42,568] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 16 from controller 1 epoch 2 for the become-follower transition for partition rtr-sys-channel-0 with leader 2 (state.change.logger)
[2019-07-16 18:01:42,569] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 16 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:42,573] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 4, 1], offlineReplicas=[4]) for partition rtr-sys-channel-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 17 (state.change.logger)
[2019-07-16 18:01:42,575] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 17 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:42,576] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 21 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:42,577] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 18 sent to broker 192.168.1.183:9092 (id: 4 rack: null) (state.change.logger)
[2019-07-16 18:01:42,578] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[]} for request STOP_REPLICA with correlation id 19 sent to broker 192.168.1.183:9092 (id: 4 rack: null) (state.change.logger)
[2019-07-16 18:01:42,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 11 sent to broker 192.168.1.182:9092 (id: 3 rack: null) (state.change.logger)
[2019-07-16 18:01:42,579] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 22 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:42,580] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=0}]} for request STOP_REPLICA with correlation id 20 sent to broker 192.168.1.183:9092 (id: 4 rack: null) (state.change.logger)
[2019-07-16 18:01:43,555] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,555] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-19 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,555] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,555] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-43 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,555] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-7 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,556] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,556] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,556] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-31 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,556] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,556] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,556] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,556] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:43,584] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,584] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,585] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,585] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,586] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,586] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,586] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,587] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,587] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,588] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,588] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,589] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:43,627] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,628] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-7 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,628] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-35 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,628] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-23 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,628] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-47 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,628] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-31 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,629] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,629] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,629] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition rtr-sys-channel-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,629] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-19 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,629] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-11 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,630] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-43 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,630] TRACE [Controller id=1 epoch=2] Changed state of replica 4 for partition __consumer_offsets-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:43,630] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,4,1, isNew=false) to broker 2 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:43,630] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,4,1, isNew=false) to broker 1 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=2,1, zkVersion=1, replicas=2,4,1, isNew=false) correlation id 18 from controller 1 epoch 2 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2019-07-16 18:01:43,631] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2019-07-16 18:01:43,632] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2019-07-16 18:01:43,632] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2019-07-16 18:01:43,632] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2019-07-16 18:01:43,632] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 4, 1], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:43,632] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2019-07-16 18:01:43,634] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 18 epoch 2 for partition rtr-sys-channel-0 since its associated leader epoch 1 is not higher than the current leader epoch 1 (state.change.logger)
[2019-07-16 18:01:43,655] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 23 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:43,655] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 12 sent to broker 192.168.1.182:9092 (id: 3 rack: null) (state.change.logger)
[2019-07-16 18:01:43,657] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 18 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,660] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,661] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[4], zkVersion=1, replicas=[4], offlineReplicas=[4]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,661] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[2, 4, 1], offlineReplicas=[4]) for partition rtr-sys-channel-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 19 (state.change.logger)
[2019-07-16 18:01:43,661] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 24 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:43,662] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 19 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:49,692] TRACE [Controller id=1 epoch=2] Changed partition rtrchannel01-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=1, isr=List(1, 2), zkVersion=1) (state.change.logger)
[2019-07-16 18:01:49,692] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:49,692] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:49,693] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 3 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:49,693] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2, 3) for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:49,693] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 20 from controller 1 epoch 2 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:49,694] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 20 from controller 1 epoch 2 starting the become-leader transition for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:49,701] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 20 for partition rtrchannel01-0 (last update controller epoch 2) (state.change.logger)
[2019-07-16 18:01:49,701] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 20 from controller 1 epoch 2 for the become-leader transition for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:49,710] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 20 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:49,711] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition rtrchannel01-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 21 (state.change.logger)
[2019-07-16 18:01:49,711] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 21 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:49,714] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 13 sent to broker 192.168.1.182:9092 (id: 3 rack: null) (state.change.logger)
[2019-07-16 18:01:49,716] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 14 sent to broker 192.168.1.182:9092 (id: 3 rack: null) (state.change.logger)
[2019-07-16 18:01:49,731] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 25 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:49,733] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 26 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-19 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-46 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-43 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-10 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-7 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-34 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,685] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-31 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,686] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-22 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:50,736] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,736] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,736] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,736] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,737] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,737] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,738] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,738] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,738] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,739] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,739] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,739] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,739] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,739] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,740] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,740] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,740] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,740] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,740] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,741] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,741] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,741] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,741] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,741] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:50,776] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,777] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,777] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,777] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,777] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,778] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,778] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,778] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,778] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,778] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition rtrchannel01-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,779] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,779] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,779] TRACE [Controller id=1 epoch=2] Changed state of replica 3 for partition __consumer_offsets-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:50,779] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 2 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:50,779] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) to broker 1 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) to brokers Set(1, 2) for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=1,2, zkVersion=1, replicas=3,1,2, isNew=false) correlation id 22 from controller 1 epoch 2 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2019-07-16 18:01:50,780] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 22 epoch 2 for partition rtrchannel01-0 since its associated leader epoch 1 is not higher than the current leader epoch 1 (state.change.logger)
[2019-07-16 18:01:50,780] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2019-07-16 18:01:50,781] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2019-07-16 18:01:50,781] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2019-07-16 18:01:50,781] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2019-07-16 18:01:50,781] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2019-07-16 18:01:50,781] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 22 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:50,782] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 27 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=1, replicas=[3, 1, 2], offlineReplicas=[3]) for partition rtrchannel01-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,783] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 23 (state.change.logger)
[2019-07-16 18:01:50,784] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 23 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:50,785] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 28 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:55,237] TRACE [Controller id=1 epoch=2] Changed partition rtr-sys-channel-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), zkVersion=2) (state.change.logger)
[2019-07-16 18:01:55,237] TRACE [Controller id=1 epoch=2] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=2,4,1, isNew=false) to broker 2 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:55,238] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=2,4,1, isNew=false) to broker 1 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:55,238] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[2, 4, 1], offlineReplicas=[2, 4]) to brokers Set(1, 2) for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:55,239] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=2,4,1, isNew=false) correlation id 24 from controller 1 epoch 2 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:55,239] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 24 from controller 1 epoch 2 starting the become-leader transition for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:55,246] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 24 for partition rtr-sys-channel-0 (last update controller epoch 2) (state.change.logger)
[2019-07-16 18:01:55,246] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 24 from controller 1 epoch 2 for the become-leader transition for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:55,253] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 29 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:55,255] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 30 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:55,257] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[]} for request STOP_REPLICA with correlation id 31 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:55,259] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=0}]} for request STOP_REPLICA with correlation id 32 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:55,260] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtr-sys-channel,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 24 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:55,261] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[2, 4, 1], offlineReplicas=[2, 4]) for partition rtr-sys-channel-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 25 (state.change.logger)
[2019-07-16 18:01:55,261] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 25 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:55,264] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition rtrchannel01-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:55,264] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:55,265] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1, 2) for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:55,265] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 26 from controller 1 epoch 2 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:55,265] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 26 from controller 1 epoch 2 starting the become-leader transition for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:55,268] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 33 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:55,271] INFO [Broker id=1] Skipped the become-leader state change after marking its partition as leader with correlation id 26 from controller 1 epoch 2 for partition rtrchannel01-0 (last update controller epoch 2) since it is already the leader for the partition. (state.change.logger)
[2019-07-16 18:01:55,271] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 26 from controller 1 epoch 2 for the become-leader transition for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:55,272] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[]} for request STOP_REPLICA with correlation id 34 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:55,272] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 26 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:55,273] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition rtrchannel01-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 27 (state.change.logger)
[2019-07-16 18:01:55,274] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 27 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:55,275] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=0}]} for request STOP_REPLICA with correlation id 35 sent to broker 192.168.1.181:9092 (id: 2 rack: null) (state.change.logger)
[2019-07-16 18:01:56,192] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,192] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-49 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,192] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,192] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-19 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,192] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,192] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-13 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,193] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,193] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-46 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,200] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,200] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-43 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-10 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-37 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-7 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-34 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-31 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-1 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-25 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-22 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,201] TRACE [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-07-16 18:01:56,257] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,257] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,258] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,258] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,258] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,258] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,258] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,259] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,259] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,259] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,259] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,260] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,260] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,260] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,260] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,261] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,261] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,261] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,261] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,262] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,263] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,263] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,263] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,263] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,263] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,263] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,264] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,264] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,264] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,264] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,264] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,265] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,265] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,265] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,265] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,265] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,266] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:123)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:109)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onReplicasBecomeOffline(KafkaController.scala:460)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onBrokerFailure(KafkaController.scala:428)
	at kafka.controller.KafkaController$BrokerChange$.process(KafkaController.scala:1328)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:01:56,291] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,292] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,292] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-25 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,292] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-41 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,292] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,292] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-49 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,292] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-37 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,293] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition rtr-sys-channel-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,293] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-17 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,293] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-13 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,293] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition rtrchannel01-0 from OfflineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,293] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,294] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,294] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-5 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,294] TRACE [Controller id=1 epoch=2] Changed state of replica 2 for partition __consumer_offsets-29 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-07-16 18:01:56,294] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=3,1,2, isNew=false) to broker 1 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:56,294] TRACE [Controller id=1 epoch=2] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=2,4,1, isNew=false) to broker 1 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-49 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-13 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-5 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-21 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-37 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-29 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-45 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=3,1,2, isNew=false) correlation id 28 from controller 1 epoch 2 for partition rtrchannel01-0 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-9 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=2,4,1, isNew=false) correlation id 28 from controller 1 epoch 2 for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-1 (state.change.logger)
[2019-07-16 18:01:56,295] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-17 (state.change.logger)
[2019-07-16 18:01:56,295] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 28 epoch 2 for partition rtrchannel01-0 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2019-07-16 18:01:56,296] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-25 (state.change.logger)
[2019-07-16 18:01:56,296] WARN [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 28 epoch 2 for partition rtr-sys-channel-0 since its associated leader epoch 2 is not higher than the current leader epoch 2 (state.change.logger)
[2019-07-16 18:01:56,296] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[2, 4, 1], offlineReplicas=[2, 4]) to brokers Set(1) for partition rtr-sys-channel-0 (state.change.logger)
[2019-07-16 18:01:56,296] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-41 (state.change.logger)
[2019-07-16 18:01:56,296] TRACE [Controller id=1 epoch=2] Sending UpdateMetadata request PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-33 (state.change.logger)
[2019-07-16 18:01:56,296] TRACE [Controller id=1 epoch=2] Received response {error_code=0,partitions=[{topic=rtrchannel01,partition=0,error_code=11},{topic=rtr-sys-channel,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 28 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:01:56,297] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,297] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,297] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[3, 1, 2], offlineReplicas=[3, 2]) for partition rtrchannel01-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,297] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=2, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[2, 4, 1], offlineReplicas=[2, 4]) for partition rtr-sys-channel-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 29 (state.change.logger)
[2019-07-16 18:01:56,298] TRACE [Controller id=1 epoch=2] Received response {error_code=0} for request UPDATE_METADATA with correlation id 29 sent to broker 192.168.1.180:9092 (id: 1 rack: null) (state.change.logger)
[2019-07-16 18:02:00,371] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition rtrchannel01-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition rtrchannel01-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent$class.process(KafkaController.scala:1809)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:02:00,371] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition rtr-sys-channel-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition rtr-sys-channel-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent$class.process(KafkaController.scala:1809)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:02:05,382] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition rtrchannel01-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition rtrchannel01-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent$class.process(KafkaController.scala:1809)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:02:05,382] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition rtr-sys-channel-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition rtr-sys-channel-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent$class.process(KafkaController.scala:1809)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:02:10,390] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition rtrchannel01-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition rtrchannel01-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent$class.process(KafkaController.scala:1809)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-07-16 18:02:10,391] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition rtr-sys-channel-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition rtr-sys-channel-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:390)
	at kafka.controller.PartitionStateMachine$$anonfun$doElectLeaderForPartitions$3.apply(PartitionStateMachine.scala:388)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:388)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:315)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:225)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:141)
	at kafka.controller.KafkaController$ControlledShutdown.kafka$controller$KafkaController$ControlledShutdown$$doControlledShutdown(KafkaController.scala:1094)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at kafka.controller.KafkaController$ControlledShutdown$$anonfun$25.apply(KafkaController.scala:1056)
	at scala.util.Try$.apply(Try.scala:192)
	at kafka.controller.KafkaController$ControlledShutdown.handleProcess(KafkaController.scala:1056)
	at kafka.controller.PreemptableControllerEvent$class.process(KafkaController.scala:1809)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1047)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:94)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:93)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
